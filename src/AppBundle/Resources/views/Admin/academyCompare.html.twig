{% extends "::base.html.twig" %}

{% block title %}NFQ Pagrindinis{% endblock %}

{% block body %}
    <article class="article">
        <div id="academy_chooser">
            <form action="">



                <select name="academy1">
                    {% for academy in academies %}
                    <option value="{{ academy.id }}">{{ academy.name }}</option>
                    {% endfor %}
                </select>
                <select name="academy2">
                    {% for academy in academies %}
                        <option value="{{ academy.id }}">{{ academy.name }}</option>
                    {% endfor %}
                </select>
                <br><br>
                <input type="submit", value="Pasirinkti">
            </form>
        </div>
        <div class="overview_grades">
            <div id="grades" ></div>
            <div id="attendance"></div>
        </div>

    </article>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script>
        function getAttendanceWorkshopAverage(workshopId, teams, attendances)
        {
            console.log(teams);
            var average = 0;
            var count = 0;
            for (i = 0; i < teams.length; i++)
            {
                for (j = 0; j < teams[i].students.length; j++)
                {
                    for (k = 0; k < attendances.length; k++)
                    {
                        console.log(k + " " + attendances[k].present)
                        if (attendances[k].workshopId == workshopId && attendances[k].student.id == teams[i].students[j].id)
                        {
                            count++;
                            if(attendances[k].present) {
                                average++;
                            }
                        }
                    }
                }
            }
            average = average/count;
            return average*100;
        }
        function getTeamsFromSelectedAcademy(academy, teamsAll)
        {
            var teams = [];
            n = 0;
            for (i = 0; i < teamsAll.length; i++)
            {
                if (teamsAll[i].academy == academy) {
                    teams[n]=teamsAll[i];
                    n++;
                }
            }
            return teams;
        }
        function updateViewData()
        {
            selectedAcademies = $('form').serialize();
            console.log(selectedAcademies);
        }
        function getAcademy(n)
        {
            for (i = 0; i < Academies.length; i++)
            {
                if (Academies[i].id == n)
                {
                    return Academies[i];
                }
            }
            return false;
        }


    </script>
    <script>
        var Allteams = {{ teams|json_encode() | raw()}};
        var Academies = {{ academies | json_encode() | raw() }}
        var attendances = {{ attendance | json_encode() | raw() }}
        //document.write(window.teams.toString());
        var academyOneId = {{ academyOneId|json_encode() | raw()}};
        var academyTwoId = {{ academyTwoId|json_encode() | raw()}};
        var reqiuredTeams = getTeamsFromSelectedAcademy(academyOneId, Allteams);
        var averages = [getAttendanceWorkshopAverage(1, Allteams, attendances), getAttendanceWorkshopAverage(2, Allteams, attendances), getAttendanceWorkshopAverage(3, Allteams, attendances), getAttendanceWorkshopAverage(4, Allteams, attendances)]




        $(function () {
            Highcharts.chart('attendance', {
                title: {
                    text: 'Paskutinių paskaitų lankomumas',
                    x: -20 //center,
                },
                subtitle: {
                    text: '2016 Rudens semestras',
                    x: -20
                },
                xAxis: {
                    categories: ['11.06', '11.09'],
                    plotLines: [{
                        value: 0,
                        width: 1,
                        color: '#100100100'
                    }]
                },
                yAxis: {
                    title: {
                        text: 'Lankomumas'
                    },
                    plotLines: [{
                        value: 0,
                        width: 1,
                        color: '#100100100'
                    }],
                    max: 100,
                    min: 0
                },
                chart: {
                    //backgroundColor: '#000000'
                    type: "column"
                },
                tooltip: {
                    valueSuffix: '%'
                },
                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'middle',
                    borderWidth: 0
                },

                series: [{
                    name: 'Kaunas',
                    data: [window.averages[0], window.averages[1]]
                },
                    {
                        name: 'Vilnius',
                        data: [window.averages[2], window.averages[3]]
                    }
                ]
            });
        });
    </script>

{% endblock %}
